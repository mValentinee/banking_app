{"mappings":"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","sources":["script.js"],"sourcesContent":["// BANKIST APP\n\n/////////////////////////////////////////////////\n// Data\n\n// DIFFERENT DATA! Contains movement dates, currency and locale\n\nnew IntersectionObserver();\n\nconst account1 = {\n  owner: 'Jonas Schmedtmann',\n  movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n\n  movementsDates: [\n    '2019-11-18T21:31:17.178Z',\n    '2019-12-23T07:42:02.383Z',\n    '2020-01-28T09:15:04.904Z',\n    '2020-04-01T10:17:24.185Z',\n    '2020-05-08T14:11:59.604Z',\n    '2020-05-27T17:01:17.194Z',\n    '2020-07-11T23:36:17.929Z',\n    '2020-07-12T10:51:36.790Z',\n  ],\n  currency: 'EUR',\n  locale: 'pt-PT', // de-DE\n};\n\nconst account2 = {\n  owner: 'Jessica Davis',\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n\n  movementsDates: [\n    '2019-11-01T13:15:33.035Z',\n    '2019-11-30T09:48:16.867Z',\n    '2019-12-25T06:04:23.907Z',\n    '2020-01-25T14:18:46.235Z',\n    '2020-02-05T16:33:06.386Z',\n    '2020-04-10T14:43:26.374Z',\n    '2020-06-25T18:49:59.371Z',\n    '2020-07-26T12:01:20.894Z',\n  ],\n  currency: 'USD',\n  locale: 'en-US',\n};\n\nconst accounts = [account1, account2];\n\n/////////////////////////////////////////////////\n// Elements\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\n/////////////////////////////////////////////////\n// Functions\n\nconst displayMovements = function (acc, sort = false) {\n  containerMovements.innerHTML = '';\n\n  const movs = sort\n    ? acc.movements.slice().sort((a, b) => a - b)\n    : acc.movements;\n\n  movs.forEach(function (mov, i) {\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\n\n    // Setting up Dates For Transcation\n    const date = new Date(acc.movementsDates[i]);\n    const day = `${date.getDate()}`.padStart(2, 0);\n    const month = `${date.getMonth() + 1}`.padStart(2, 0);\n    const year = `${date.getFullYear()}`;\n    const displayDate = `${day}/${month}/${year}`;\n\n    // HTML For Movements\n    const html = `\n      <div class=\"movements__row\">\n        <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n    <div class=\"movements__date\">${displayDate}</div>\n        <div class=\"movements__value\">${mov.toFixed(2)}€</div>\n      </div>\n    `;\n\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n  });\n};\n\nconst calcDisplayBalance = function (acc) {\n  acc.balance = acc.movements.reduce((acc, mov) => acc + mov, 0);\n  labelBalance.textContent = `${acc.balance.toFixed(2)}€`;\n};\n\nconst calcDisplaySummary = function (acc) {\n  const incomes = acc.movements\n    .filter(mov => mov > 0)\n    .reduce((acc, mov) => acc + mov, 0);\n  labelSumIn.textContent = `${incomes.toFixed(2)}€`;\n\n  const out = acc.movements\n    .filter(mov => mov < 0)\n    .reduce((acc, mov) => acc + mov, 0);\n  labelSumOut.textContent = `${Math.abs(out).toFixed(2)}€`;\n\n  const interest = acc.movements\n    .filter(mov => mov > 0)\n    .map(deposit => (deposit * acc.interestRate) / 100)\n    .filter((int, i, arr) => {\n      // console.log(arr);\n      return int >= 1;\n    })\n    .reduce((acc, int) => acc + int, 0);\n  labelSumInterest.textContent = `${interest.toFixed(2)}€`;\n};\n\nconst createUsernames = function (accs) {\n  accs.forEach(function (acc) {\n    acc.username = acc.owner\n      .toLowerCase()\n      .split(' ')\n      .map(name => name[0])\n      .join('');\n  });\n};\ncreateUsernames(accounts);\n\nconst updateUI = function (acc) {\n  // Display movements\n  displayMovements(acc);\n\n  // Display balance\n  calcDisplayBalance(acc);\n\n  // Display summary\n  calcDisplaySummary(acc);\n};\n\n///////////////////////////////////////\n// Event handlers\nlet currentAccount;\n\nbtnLogin.addEventListener('click', function (e) {\n  // Prevent form from submitting\n  e.preventDefault();\n\n  currentAccount = accounts.find(\n    acc => acc.username === inputLoginUsername.value\n  );\n  console.log(currentAccount);\n\n  if (currentAccount?.pin === +inputLoginPin.value) {\n    // Display UI and message\n    labelWelcome.textContent = `Welcome back, ${\n      currentAccount.owner.split(' ')[0]\n    }`;\n    containerApp.style.opacity = 100;\n\n    // Date\n    const date = new Date();\n    const day = `${date.getDate()}`.padStart(2, 0);\n    const month = `${date.getMonth() + 1}`.padStart(2, 0);\n    const year = `${date.getFullYear()}`;\n    const hour = `${date.getHours()}`.padStart(2, 0);\n    const minute = `${date.getMinutes()}`.padStart(2, 0);\n    labelDate.textContent = `${day}/${month}/${year}, ${hour}:${minute}`;\n\n    // Clear input fields\n    inputLoginUsername.value = inputLoginPin.value = '';\n    inputLoginPin.blur();\n\n    // Update UI\n    updateUI(currentAccount);\n  }\n});\n\nbtnTransfer.addEventListener('click', function (e) {\n  e.preventDefault();\n  const amount = +inputTransferAmount.value;\n  const receiverAcc = accounts.find(\n    acc => acc.username === inputTransferTo.value\n  );\n  inputTransferAmount.value = inputTransferTo.value = '';\n\n  if (\n    amount > 0 &&\n    receiverAcc &&\n    currentAccount.balance >= amount &&\n    receiverAcc?.username !== currentAccount.username\n  ) {\n    // Doing the transfer\n    currentAccount.movements.push(-amount);\n    receiverAcc.movements.push(amount);\n\n    // Add Transfer Date\n    currentAccount.movementsDates.push(new Date().toISOString());\n    receiverAcc.movementsDates.push(new Date().toISOString());\n    // Update UI\n    updateUI(currentAccount);\n  }\n});\n\nbtnLoan.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const amount = +inputLoanAmount.value;\n\n  if (amount > 0 && currentAccount.movements.some(mov => mov >= amount * 0.1)) {\n    // Add movement\n    currentAccount.movements.push(amount);\n    currentAccount.movementsDates.push(new Date().toISOString());\n    // Update UI\n    updateUI(currentAccount);\n  }\n  inputLoanAmount.value = '';\n});\n\nbtnClose.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  if (\n    inputCloseUsername.value === currentAccount.username &&\n    Number(inputClosePin.value) === currentAccount.pin\n  ) {\n    const index = accounts.findIndex(\n      acc => acc.username === currentAccount.username\n    );\n    console.log(index);\n    // .indexOf(23)\n\n    // Delete account\n    accounts.splice(index, 1);\n\n    // Hide UI\n    containerApp.style.opacity = 0;\n  }\n\n  inputCloseUsername.value = inputClosePin.value = '';\n});\n\nlet sorted = false;\nbtnSort.addEventListener('click', function (e) {\n  e.preventDefault();\n  displayMovements(currentAccount, !sorted);\n  sorted = !sorted;\n});\n"],"names":["IntersectionObserver","account1","owner","movements","interestRate","pin","movementsDates","currency","locale","account2","accounts","labelWelcome","document","querySelector","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","displayMovements","acc","sort","innerHTML","slice","a","b","forEach","mov","i","type","date","Date","html","getDate","padStart","getMonth","getFullYear","toFixed","insertAdjacentHTML","calcDisplayBalance","balance","reduce","textContent","calcDisplaySummary","incomes","filter","out","Math","abs","interest","map","deposit","int","arr","createUsernames","accs","username","toLowerCase","split","name","join","updateUI","currentAccount","addEventListener","e","preventDefault","find","value","console","log","style","opacity","day","month","year","hour","getHours","minute","getMinutes","blur","amount","receiverAcc","push","toISOString","some","Number","index","findIndex","splice","sorted"],"version":3,"file":"index.11bcc878.js.map"}